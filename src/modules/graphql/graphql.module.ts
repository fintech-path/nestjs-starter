import { ApolloDriver, ApolloDriverConfig } from '@nestjs/apollo';
import { Module } from '@nestjs/common';
import { GraphQLModule } from '@nestjs/graphql';
import { join } from 'path';
import { upperDirectiveTransformer } from 'src/common/directives/upper-case.directive';
import { GqlAuthModule } from './auth/gql.auth.module';
import { CatsModule } from './cats/cats.module';
import { GqlConfig } from 'src/common/config/gql.config';

@Module({
  imports: [
    GqlAuthModule,
    CatsModule,
    GraphQLModule.forRoot<ApolloDriverConfig>({
      driver: ApolloDriver,
      debug: true,
      playground: true,
      typePaths: ['./**/*.graphql'],
      transformSchema: (schema) => upperDirectiveTransformer(schema, 'upper'),
      subscriptions: {
        'graphql-ws': {
          path: '/graphql',
          onConnect: (ctx) => {
            console.log('graphql client subscription connected with websocket');
          },
        },
      },
      definitions: {
        path: join(process.cwd(), GqlConfig.autoGeneratedGqlFile),
        outputAs: 'class',
      },
    }),
  ],
})
export class MyGraphQLModule {}
